/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param author The name of the journalist or entity that authored the news article.
 * @param benzingaId The identifer used by Benzinga for this record.
 * @param body The full text content of the news article.
 * @param channels A list of categories or topics that the article belongs to (e.g., 'News', 'Price Target').
 * @param images A list of images associated with the article.
 * @param lastUpdated The timestamp (formatted as an ISO 8601 timestamp) when the news article was last updated in the system.
 * @param published The timestamp (formatted as an ISO 8601 timestamp) when the news article was originally published.
 * @param tags A list of tags that describe the themes or content of the article.
 * @param teaser A short summary or lead-in to the news article's content.
 * @param tickers A list of stock or crypto tickers mentioned in the article.
 * @param title The headline of the news article.
 * @param url The direct link to the source of the news article.
 */


data class GetBenzingaV1News200ResponseResultsInner (

    /* The name of the journalist or entity that authored the news article. */
    @Json(name = "author")
    val author: kotlin.String? = null,

    /* The identifer used by Benzinga for this record. */
    @Json(name = "benzinga_id")
    val benzingaId: kotlin.Long? = null,

    /* The full text content of the news article. */
    @Json(name = "body")
    val body: kotlin.String? = null,

    /* A list of categories or topics that the article belongs to (e.g., 'News', 'Price Target'). */
    @Json(name = "channels")
    val channels: kotlin.collections.List<kotlin.String>? = null,

    /* A list of images associated with the article. */
    @Json(name = "images")
    val images: kotlin.collections.List<kotlin.String>? = null,

    /* The timestamp (formatted as an ISO 8601 timestamp) when the news article was last updated in the system. */
    @Json(name = "last_updated")
    val lastUpdated: kotlin.String? = null,

    /* The timestamp (formatted as an ISO 8601 timestamp) when the news article was originally published. */
    @Json(name = "published")
    val published: kotlin.String? = null,

    /* A list of tags that describe the themes or content of the article. */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    /* A short summary or lead-in to the news article's content. */
    @Json(name = "teaser")
    val teaser: kotlin.String? = null,

    /* A list of stock or crypto tickers mentioned in the article. */
    @Json(name = "tickers")
    val tickers: kotlin.collections.List<kotlin.String>? = null,

    /* The headline of the news article. */
    @Json(name = "title")
    val title: kotlin.String? = null,

    /* The direct link to the source of the news article. */
    @Json(name = "url")
    val url: kotlin.String? = null

) {


}

