/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param benzingaFirmId The unique identifier assigned by Benzinga to the research firm or investment bank.
 * @param benzingaId The identifier used by Benzinga for this record.
 * @param firmName The name of the research firm or investment bank issuing the ratings.
 * @param fullName The full name of the analyst associated with the ratings.
 * @param lastUpdated The timestamp (formatted as an ISO 8601 timestamp) when the analyst record was last updated in the system.
 * @param overallAvgReturn The average percent price difference per rating since the date of recommendation.
 * @param overallAvgReturnPercentile The analyst's percentile rank based on average return, relative to other analysts.
 * @param overallSuccessRate The percentage of gain/loss ratings that resulted in a gain overall.
 * @param smartScore A weighted average of the total_ratings_percentile, overall_avg_return_percentile, and overall_success_rate.
 * @param totalRatings The total number of ratings issued by the analyst included in the performance calculation.
 * @param totalRatingsPercentile The analyst's percentile rank based on the total number of ratings issued, relative to other analysts.
 */


data class GetBenzingaV1Analysts200ResponseResultsInner (

    /* The unique identifier assigned by Benzinga to the research firm or investment bank. */
    @Json(name = "benzinga_firm_id")
    val benzingaFirmId: kotlin.String? = null,

    /* The identifier used by Benzinga for this record. */
    @Json(name = "benzinga_id")
    val benzingaId: kotlin.String? = null,

    /* The name of the research firm or investment bank issuing the ratings. */
    @Json(name = "firm_name")
    val firmName: kotlin.String? = null,

    /* The full name of the analyst associated with the ratings. */
    @Json(name = "full_name")
    val fullName: kotlin.String? = null,

    /* The timestamp (formatted as an ISO 8601 timestamp) when the analyst record was last updated in the system. */
    @Json(name = "last_updated")
    val lastUpdated: kotlin.String? = null,

    /* The average percent price difference per rating since the date of recommendation. */
    @Json(name = "overall_avg_return")
    val overallAvgReturn: kotlin.Double? = null,

    /* The analyst's percentile rank based on average return, relative to other analysts. */
    @Json(name = "overall_avg_return_percentile")
    val overallAvgReturnPercentile: kotlin.Double? = null,

    /* The percentage of gain/loss ratings that resulted in a gain overall. */
    @Json(name = "overall_success_rate")
    val overallSuccessRate: kotlin.Double? = null,

    /* A weighted average of the total_ratings_percentile, overall_avg_return_percentile, and overall_success_rate. */
    @Json(name = "smart_score")
    val smartScore: kotlin.Double? = null,

    /* The total number of ratings issued by the analyst included in the performance calculation. */
    @Json(name = "total_ratings")
    val totalRatings: kotlin.Double? = null,

    /* The analyst's percentile rank based on the total number of ratings issued, relative to other analysts. */
    @Json(name = "total_ratings_percentile")
    val totalRatingsPercentile: kotlin.Double? = null

) {


}

