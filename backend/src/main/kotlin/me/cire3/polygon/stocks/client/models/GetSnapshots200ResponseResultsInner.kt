/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.GetSnapshotSummary200ResponseResultsInnerSession
import org.openapitools.client.models.GetSnapshots200ResponseResultsInnerDetails
import org.openapitools.client.models.GetSnapshots200ResponseResultsInnerGreeks
import org.openapitools.client.models.GetSnapshots200ResponseResultsInnerLastQuote
import org.openapitools.client.models.GetSnapshots200ResponseResultsInnerLastTrade
import org.openapitools.client.models.GetSnapshots200ResponseResultsInnerUnderlyingAsset

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param ticker The ticker symbol for the asset.
 * @param breakEvenPrice The price of the underlying asset for the contract to break even. For a call, this value is (strike price + premium paid). For a put, this value is (strike price - premium paid).
 * @param details 
 * @param error The error while looking for this ticker.
 * @param fmv Fair market value is only available on Business plans. It's it our proprietary algorithm to generate a real-time, accurate, fair market value of a tradable security. For more information, <a rel=\"nofollow\" target=\"_blank\" href=\"https://polygon.io/contact\">contact us</a>.
 * @param greeks 
 * @param impliedVolatility The market's forecast for the volatility of the underlying asset, based on this option's current price.
 * @param lastQuote 
 * @param lastTrade 
 * @param marketStatus The market status for the market that trades this ticker. Possible values for stocks, options, crypto, and forex snapshots are open, closed, early_trading, or late_trading. Possible values for indices snapshots are regular_trading, closed, early_trading, and late_trading.
 * @param message The error message while looking for this ticker.
 * @param name The name of this contract.
 * @param openInterest The quantity of this contract held at the end of the last trading day.
 * @param session 
 * @param type The asset class for this ticker.
 * @param underlyingAsset 
 * @param `value` Value of Index.
 */


data class GetSnapshots200ResponseResultsInner (

    /* The ticker symbol for the asset. */
    @Json(name = "ticker")
    val ticker: kotlin.String,

    /* The price of the underlying asset for the contract to break even. For a call, this value is (strike price + premium paid). For a put, this value is (strike price - premium paid). */
    @Json(name = "break_even_price")
    val breakEvenPrice: kotlin.Double? = null,

    @Json(name = "details")
    val details: GetSnapshots200ResponseResultsInnerDetails? = null,

    /* The error while looking for this ticker. */
    @Json(name = "error")
    val error: kotlin.String? = null,

    /* Fair market value is only available on Business plans. It's it our proprietary algorithm to generate a real-time, accurate, fair market value of a tradable security. For more information, <a rel=\"nofollow\" target=\"_blank\" href=\"https://polygon.io/contact\">contact us</a>. */
    @Json(name = "fmv")
    val fmv: java.math.BigDecimal? = null,

    @Json(name = "greeks")
    val greeks: GetSnapshots200ResponseResultsInnerGreeks? = null,

    /* The market's forecast for the volatility of the underlying asset, based on this option's current price. */
    @Json(name = "implied_volatility")
    val impliedVolatility: kotlin.Double? = null,

    @Json(name = "last_quote")
    val lastQuote: GetSnapshots200ResponseResultsInnerLastQuote? = null,

    @Json(name = "last_trade")
    val lastTrade: GetSnapshots200ResponseResultsInnerLastTrade? = null,

    /* The market status for the market that trades this ticker. Possible values for stocks, options, crypto, and forex snapshots are open, closed, early_trading, or late_trading. Possible values for indices snapshots are regular_trading, closed, early_trading, and late_trading. */
    @Json(name = "market_status")
    val marketStatus: kotlin.String? = null,

    /* The error message while looking for this ticker. */
    @Json(name = "message")
    val message: kotlin.String? = null,

    /* The name of this contract. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* The quantity of this contract held at the end of the last trading day. */
    @Json(name = "open_interest")
    val openInterest: kotlin.Double? = null,

    @Json(name = "session")
    val session: GetSnapshotSummary200ResponseResultsInnerSession? = null,

    /* The asset class for this ticker. */
    @Json(name = "type")
    val type: GetSnapshots200ResponseResultsInner.Type? = null,

    @Json(name = "underlying_asset")
    val underlyingAsset: GetSnapshots200ResponseResultsInnerUnderlyingAsset? = null,

    /* Value of Index. */
    @Json(name = "value")
    val `value`: java.math.BigDecimal? = null

) {

    /**
     * The asset class for this ticker.
     *
     * Values: stocks,options,fx,crypto,indices
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "stocks") stocks("stocks"),
        @Json(name = "options") options("options"),
        @Json(name = "fx") fx("fx"),
        @Json(name = "crypto") crypto("crypto"),
        @Json(name = "indices") indices("indices");
    }

}

