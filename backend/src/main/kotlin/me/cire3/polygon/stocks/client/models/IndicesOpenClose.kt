/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param close The close value for the symbol in the given time period.
 * @param from The requested date.
 * @param high The highest value for the symbol in the given time period.
 * @param low The lowest value for the symbol in the given time period.
 * @param `open` The open value for the symbol in the given time period.
 * @param status The status of this request's response.
 * @param symbol The exchange symbol that this item is traded under.
 * @param afterHours The close value of the ticker symbol in after hours trading.
 * @param preMarket The open value of the ticker symbol in pre-market trading.
 */


data class IndicesOpenClose (

    /* The close value for the symbol in the given time period. */
    @Json(name = "close")
    val close: kotlin.Double,

    /* The requested date. */
    @Json(name = "from")
    val from: java.time.LocalDate,

    /* The highest value for the symbol in the given time period. */
    @Json(name = "high")
    val high: kotlin.Double,

    /* The lowest value for the symbol in the given time period. */
    @Json(name = "low")
    val low: kotlin.Double,

    /* The open value for the symbol in the given time period. */
    @Json(name = "open")
    val `open`: kotlin.Double,

    /* The status of this request's response. */
    @Json(name = "status")
    val status: kotlin.String,

    /* The exchange symbol that this item is traded under. */
    @Json(name = "symbol")
    val symbol: kotlin.String,

    /* The close value of the ticker symbol in after hours trading. */
    @Json(name = "afterHours")
    val afterHours: kotlin.Double? = null,

    /* The open value of the ticker symbol in pre-market trading. */
    @Json(name = "preMarket")
    val preMarket: kotlin.Int? = null

) {


}

