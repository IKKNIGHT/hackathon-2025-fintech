/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The most recent quote for this contract. This is only returned if your current plan includes quotes.
 *
 * @param ask The ask price.
 * @param bid The bid price.
 * @param lastUpdated The nanosecond timestamp of when this information was updated.
 * @param timeframe The time relevance of the data.
 * @param askExchange The ask side exchange ID. See <a href=\"https://polygon.io/docs/options/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.
 * @param askSize The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price.
 * @param bidExchange The bid side exchange ID. See <a href=\"https://polygon.io/docs/options/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs.
 * @param bidSize The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price.
 * @param midpoint The average of the bid and ask price.
 */


data class GetSnapshots200ResponseResultsInnerLastQuote (

    /* The ask price. */
    @Json(name = "ask")
    val ask: kotlin.Double,

    /* The bid price. */
    @Json(name = "bid")
    val bid: kotlin.Double,

    /* The nanosecond timestamp of when this information was updated. */
    @Json(name = "last_updated")
    val lastUpdated: kotlin.Long,

    /* The time relevance of the data. */
    @Json(name = "timeframe")
    val timeframe: GetSnapshots200ResponseResultsInnerLastQuote.Timeframe,

    /* The ask side exchange ID. See <a href=\"https://polygon.io/docs/options/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs. */
    @Json(name = "ask_exchange")
    val askExchange: kotlin.Int? = null,

    /* The ask size. This represents the number of round lot orders at the given ask price. The normal round lot size is 100 shares. An ask size of 2 means there are 200 shares available to purchase at the given ask price. */
    @Json(name = "ask_size")
    val askSize: kotlin.Double? = null,

    /* The bid side exchange ID. See <a href=\"https://polygon.io/docs/options/get_v3_reference_exchanges\" alt=\"Exchanges\">Exchanges</a> for Polygon.io's mapping of exchange IDs. */
    @Json(name = "bid_exchange")
    val bidExchange: kotlin.Int? = null,

    /* The bid size. This represents the number of round lot orders at the given bid price. The normal round lot size is 100 shares. A bid size of 2 means there are 200 shares for purchase at the given bid price. */
    @Json(name = "bid_size")
    val bidSize: kotlin.Double? = null,

    /* The average of the bid and ask price. */
    @Json(name = "midpoint")
    val midpoint: kotlin.Double? = null

) {

    /**
     * The time relevance of the data.
     *
     * Values: dELAYED,rEALMinusTIME
     */
    @JsonClass(generateAdapter = false)
    enum class Timeframe(val value: kotlin.String) {
        @Json(name = "DELAYED") dELAYED("DELAYED"),
        @Json(name = "REAL-TIME") rEALMinusTIME("REAL-TIME");
    }

}

