/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param active Indicates if the security is actively listed.  If false, this means the company is no longer listed and cannot be traded.
 * @param bloomberg The Bloomberg guid for the symbol.
 * @param ceo The name of the company's current CEO.
 * @param cik The official CIK guid used for SEC database/filings.
 * @param country The country in which the company is registered.
 * @param description A description of the company and what they do/offer.
 * @param employees The approximate number of employees for the company.
 * @param exchange The symbol's primary exchange.
 * @param exchangeSymbol The exchange code (id) of the symbol's primary exchange.
 * @param figi The OpenFigi project guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://openfigi.com/\">https://openfigi.com/</a>)
 * @param hqAddress The street address for the company's headquarters.
 * @param hqCountry The country in which the company's headquarters is located.
 * @param hqState The state in which the company's headquarters is located.
 * @param industry The industry in which the company operates.
 * @param lei The Legal Entity Identifier (LEI) guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Legal_Entity_Identifier\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>)
 * @param listdate The date that the symbol was listed on the exchange.
 * @param logo The URL of the entity's logo.
 * @param marketcap The current market cap for the company.
 * @param name The name of the company/entity.
 * @param phone The phone number for the company. This is usually a corporate contact number.
 * @param sector The sector of the indsutry in which the symbol operates.
 * @param sic Standard Industrial Classification (SIC) id for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Standard_Industrial_Classification\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>)
 * @param similar A list of ticker symbols for similar companies.
 * @param symbol The exchange symbol that this item is traded under.
 * @param tags 
 * @param type The type or class of the security.  (<a alt=\"Full List of Ticker Types\" href=\"https://polygon.io/docs/stocks/get_v3_reference_tickers_types\">Full List of Ticker Types</a>)
 * @param updated The last time this company record was updated.
 * @param url The URL of the company's website
 */


data class Company (

    /* Indicates if the security is actively listed.  If false, this means the company is no longer listed and cannot be traded. */
    @Json(name = "active")
    val active: kotlin.Boolean? = null,

    /* The Bloomberg guid for the symbol. */
    @Json(name = "bloomberg")
    val bloomberg: kotlin.String? = null,

    /* The name of the company's current CEO. */
    @Json(name = "ceo")
    val ceo: kotlin.String? = null,

    /* The official CIK guid used for SEC database/filings. */
    @Json(name = "cik")
    val cik: kotlin.String? = null,

    /* The country in which the company is registered. */
    @Json(name = "country")
    val country: kotlin.String? = null,

    /* A description of the company and what they do/offer. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* The approximate number of employees for the company. */
    @Json(name = "employees")
    val employees: kotlin.Int? = null,

    /* The symbol's primary exchange. */
    @Json(name = "exchange")
    val exchange: kotlin.String? = null,

    /* The exchange code (id) of the symbol's primary exchange. */
    @Json(name = "exchangeSymbol")
    val exchangeSymbol: kotlin.String? = null,

    /* The OpenFigi project guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://openfigi.com/\">https://openfigi.com/</a>) */
    @Json(name = "figi")
    val figi: kotlin.String? = null,

    /* The street address for the company's headquarters. */
    @Json(name = "hq_address")
    val hqAddress: kotlin.String? = null,

    /* The country in which the company's headquarters is located. */
    @Json(name = "hq_country")
    val hqCountry: kotlin.String? = null,

    /* The state in which the company's headquarters is located. */
    @Json(name = "hq_state")
    val hqState: kotlin.String? = null,

    /* The industry in which the company operates. */
    @Json(name = "industry")
    val industry: kotlin.String? = null,

    /* The Legal Entity Identifier (LEI) guid for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Legal_Entity_Identifier\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>) */
    @Json(name = "lei")
    val lei: kotlin.String? = null,

    /* The date that the symbol was listed on the exchange. */
    @Json(name = "listdate")
    val listdate: java.time.LocalDate? = null,

    /* The URL of the entity's logo. */
    @Json(name = "logo")
    val logo: kotlin.String? = null,

    /* The current market cap for the company. */
    @Json(name = "marketcap")
    val marketcap: kotlin.Int? = null,

    /* The name of the company/entity. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* The phone number for the company. This is usually a corporate contact number. */
    @Json(name = "phone")
    val phone: kotlin.String? = null,

    /* The sector of the indsutry in which the symbol operates. */
    @Json(name = "sector")
    val sector: kotlin.String? = null,

    /* Standard Industrial Classification (SIC) id for the symbol. (<a rel=\"nofollow\" target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Standard_Industrial_Classification\">https://en.wikipedia.org/wiki/Legal_Entity_Identifier</a>) */
    @Json(name = "sic")
    val sic: kotlin.Int? = null,

    /* A list of ticker symbols for similar companies. */
    @Json(name = "similar")
    val similar: kotlin.collections.List<kotlin.String>? = null,

    /* The exchange symbol that this item is traded under. */
    @Json(name = "symbol")
    val symbol: kotlin.String? = null,

    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    /* The type or class of the security.  (<a alt=\"Full List of Ticker Types\" href=\"https://polygon.io/docs/stocks/get_v3_reference_tickers_types\">Full List of Ticker Types</a>) */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* The last time this company record was updated. */
    @Json(name = "updated")
    val updated: java.time.LocalDate? = null,

    /* The URL of the company's website */
    @Json(name = "url")
    val url: kotlin.String? = null

) {


}

