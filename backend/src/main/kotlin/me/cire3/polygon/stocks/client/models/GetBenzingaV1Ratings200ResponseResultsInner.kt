/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param adjustedPriceTarget The current price target adjusted for stock splits and dividends.
 * @param analyst The name of the individual analyst who issued the rating.
 * @param benzingaAnalystId 
 * @param benzingaCalendarUrl A link to the Benzinga calendar page for this ticker
 * @param benzingaFirmId 
 * @param benzingaId The identifer used by Benzinga for this record.
 * @param benzingaNewsUrl A link to the Benzinga articles page for this ticker
 * @param companyName The name of the company being rated.
 * @param currency The ISO 4217 currency code in which the price target is denominated.
 * @param date The calendar date (formatted as YYYY-MM-DD) when the rating was issued.
 * @param firm The name of the research firm or investment bank issuing the rating.
 * @param importance A subjective indicator of the importance of the earnings event, on a scale from 0 (lowest) to 5 (highest).
 * @param lastUpdated The timestamp (formatted as an ISO 8601 timestamp) when the rating was last updated in the system.
 * @param notes Additional context or commentary.
 * @param previousAdjustedPriceTarget The previous price target adjusted for stock splits and dividends.
 * @param previousPriceTarget The previous price target set by the analyst.
 * @param previousRating The previous rating set by the analyst.
 * @param pricePercentChange 
 * @param priceTarget The current price target set by the analyst.
 * @param priceTargetAction The description of the directional change in price target. Possible values include: raises, lowers, maintains, announces, sets.
 * @param rating The current rating set by the analyst.
 * @param ratingAction The description of the change in rating from the firm's last rating. Possible values include: downgrades, maintains, reinstates, reiterates, upgrades, assumes, initiates_coverage_on, terminates_coverage_on, removes, suspends, firm_dissolved.
 * @param ticker The stock symbol of the company being rated.
 * @param time The time (formatted as 24-hour HH:MM:SS UTC) when the rating was issued.
 */


data class GetBenzingaV1Ratings200ResponseResultsInner (

    /* The current price target adjusted for stock splits and dividends. */
    @Json(name = "adjusted_price_target")
    val adjustedPriceTarget: kotlin.Float? = null,

    /* The name of the individual analyst who issued the rating. */
    @Json(name = "analyst")
    val analyst: kotlin.String? = null,

    @Json(name = "benzinga_analyst_id")
    val benzingaAnalystId: kotlin.String? = null,

    /* A link to the Benzinga calendar page for this ticker */
    @Json(name = "benzinga_calendar_url")
    val benzingaCalendarUrl: kotlin.String? = null,

    @Json(name = "benzinga_firm_id")
    val benzingaFirmId: kotlin.String? = null,

    /* The identifer used by Benzinga for this record. */
    @Json(name = "benzinga_id")
    val benzingaId: kotlin.String? = null,

    /* A link to the Benzinga articles page for this ticker */
    @Json(name = "benzinga_news_url")
    val benzingaNewsUrl: kotlin.String? = null,

    /* The name of the company being rated. */
    @Json(name = "company_name")
    val companyName: kotlin.String? = null,

    /* The ISO 4217 currency code in which the price target is denominated. */
    @Json(name = "currency")
    val currency: kotlin.String? = null,

    /* The calendar date (formatted as YYYY-MM-DD) when the rating was issued. */
    @Json(name = "date")
    val date: kotlin.String? = null,

    /* The name of the research firm or investment bank issuing the rating. */
    @Json(name = "firm")
    val firm: kotlin.String? = null,

    /* A subjective indicator of the importance of the earnings event, on a scale from 0 (lowest) to 5 (highest). */
    @Json(name = "importance")
    val importance: kotlin.Long? = null,

    /* The timestamp (formatted as an ISO 8601 timestamp) when the rating was last updated in the system. */
    @Json(name = "last_updated")
    val lastUpdated: kotlin.String? = null,

    /* Additional context or commentary. */
    @Json(name = "notes")
    val notes: kotlin.String? = null,

    /* The previous price target adjusted for stock splits and dividends. */
    @Json(name = "previous_adjusted_price_target")
    val previousAdjustedPriceTarget: kotlin.Float? = null,

    /* The previous price target set by the analyst. */
    @Json(name = "previous_price_target")
    val previousPriceTarget: kotlin.Float? = null,

    /* The previous rating set by the analyst. */
    @Json(name = "previous_rating")
    val previousRating: kotlin.String? = null,

    @Json(name = "price_percent_change")
    val pricePercentChange: kotlin.Float? = null,

    /* The current price target set by the analyst. */
    @Json(name = "price_target")
    val priceTarget: kotlin.Float? = null,

    /* The description of the directional change in price target. Possible values include: raises, lowers, maintains, announces, sets. */
    @Json(name = "price_target_action")
    val priceTargetAction: kotlin.String? = null,

    /* The current rating set by the analyst. */
    @Json(name = "rating")
    val rating: kotlin.String? = null,

    /* The description of the change in rating from the firm's last rating. Possible values include: downgrades, maintains, reinstates, reiterates, upgrades, assumes, initiates_coverage_on, terminates_coverage_on, removes, suspends, firm_dissolved. */
    @Json(name = "rating_action")
    val ratingAction: kotlin.String? = null,

    /* The stock symbol of the company being rated. */
    @Json(name = "ticker")
    val ticker: kotlin.String? = null,

    /* The time (formatted as 24-hour HH:MM:SS UTC) when the rating was issued. */
    @Json(name = "time")
    val time: kotlin.String? = null

) {


}

