/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.ListNews200ResponseResultsInnerInsightsInner
import org.openapitools.client.models.ListNews200ResponseResultsInnerPublisher

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param articleUrl A link to the news article.
 * @param author The article's author.
 * @param id Unique identifier for the article.
 * @param publishedUtc The UTC date and time when the article was published, formatted in RFC3339 standard (e.g. YYYY-MM-DDTHH:MM:SSZ).
 * @param publisher 
 * @param tickers The ticker symbols associated with the article.
 * @param title The title of the news article.
 * @param ampUrl The mobile friendly Accelerated Mobile Page (AMP) URL.
 * @param description A description of the article.
 * @param imageUrl The article's image URL.
 * @param insights The insights related to the article.
 * @param keywords The keywords associated with the article (which will vary depending on the publishing source).
 */


data class ListNews200ResponseResultsInner (

    /* A link to the news article. */
    @Json(name = "article_url")
    val articleUrl: kotlin.String,

    /* The article's author. */
    @Json(name = "author")
    val author: kotlin.String,

    /* Unique identifier for the article. */
    @Json(name = "id")
    val id: kotlin.String,

    /* The UTC date and time when the article was published, formatted in RFC3339 standard (e.g. YYYY-MM-DDTHH:MM:SSZ). */
    @Json(name = "published_utc")
    val publishedUtc: java.time.OffsetDateTime,

    @Json(name = "publisher")
    val publisher: ListNews200ResponseResultsInnerPublisher,

    /* The ticker symbols associated with the article. */
    @Json(name = "tickers")
    val tickers: kotlin.collections.List<kotlin.String>,

    /* The title of the news article. */
    @Json(name = "title")
    val title: kotlin.String,

    /* The mobile friendly Accelerated Mobile Page (AMP) URL. */
    @Json(name = "amp_url")
    val ampUrl: kotlin.String? = null,

    /* A description of the article. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* The article's image URL. */
    @Json(name = "image_url")
    val imageUrl: kotlin.String? = null,

    /* The insights related to the article. */
    @Json(name = "insights")
    val insights: kotlin.collections.List<ListNews200ResponseResultsInnerInsightsInner>? = null,

    /* The keywords associated with the article (which will vary depending on the publishing source). */
    @Json(name = "keywords")
    val keywords: kotlin.collections.List<kotlin.String>? = null

) {


}

