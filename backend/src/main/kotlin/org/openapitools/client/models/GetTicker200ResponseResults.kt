/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models

import org.openapitools.client.models.GetTicker200ResponseResultsAddress
import org.openapitools.client.models.GetTicker200ResponseResultsBranding

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Ticker with details.
 *
 * @param active Whether or not the asset is actively traded. False means the asset has been delisted.
 * @param currencyName The name of the currency that this asset is traded with.
 * @param locale The locale of the asset.
 * @param market The market type of the asset.
 * @param name The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.
 * @param ticker The exchange symbol that this item is traded under.
 * @param address 
 * @param branding 
 * @param cik The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).
 * @param compositeFigi The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
 * @param delistedUtc The last date that the asset was traded.
 * @param description A description of the company and what they do/offer.
 * @param homepageUrl The URL of the company's website homepage.
 * @param listDate The date that the symbol was first publicly listed in the format YYYY-MM-DD.
 * @param marketCap The most recent close price of the ticker multiplied by weighted outstanding shares.
 * @param phoneNumber The phone number for the company behind this ticker.
 * @param primaryExchange The ISO code of the primary listing exchange for this asset.
 * @param roundLot Round lot size of this security.
 * @param shareClassFigi The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
 * @param shareClassSharesOutstanding The recorded number of outstanding shares for this particular share class.
 * @param sicCode The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>.
 * @param sicDescription A description of this ticker's SIC code.
 * @param tickerRoot The root of a specified ticker. For example, the root of BRK.A is BRK.
 * @param tickerSuffix The suffix of a specified ticker. For example, the suffix of BRK.A is A.
 * @param totalEmployees The approximate number of employees for the company.
 * @param type The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).
 * @param weightedSharesOutstanding The shares outstanding calculated assuming all shares of other share classes are converted to this share class.
 */


data class GetTicker200ResponseResults (

    /* Whether or not the asset is actively traded. False means the asset has been delisted. */
    @Json(name = "active")
    val active: kotlin.Boolean,

    /* The name of the currency that this asset is traded with. */
    @Json(name = "currency_name")
    val currencyName: kotlin.String,

    /* The locale of the asset. */
    @Json(name = "locale")
    val locale: GetTicker200ResponseResults.Locale,

    /* The market type of the asset. */
    @Json(name = "market")
    val market: GetTicker200ResponseResults.Market,

    /* The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair. */
    @Json(name = "name")
    val name: kotlin.String,

    /* The exchange symbol that this item is traded under. */
    @Json(name = "ticker")
    val ticker: kotlin.String,

    @Json(name = "address")
    val address: GetTicker200ResponseResultsAddress? = null,

    @Json(name = "branding")
    val branding: GetTicker200ResponseResultsBranding? = null,

    /* The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key). */
    @Json(name = "cik")
    val cik: kotlin.String? = null,

    /* The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi) */
    @Json(name = "composite_figi")
    val compositeFigi: kotlin.String? = null,

    /* The last date that the asset was traded. */
    @Json(name = "delisted_utc")
    val delistedUtc: java.time.OffsetDateTime? = null,

    /* A description of the company and what they do/offer. */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* The URL of the company's website homepage. */
    @Json(name = "homepage_url")
    val homepageUrl: kotlin.String? = null,

    /* The date that the symbol was first publicly listed in the format YYYY-MM-DD. */
    @Json(name = "list_date")
    val listDate: kotlin.String? = null,

    /* The most recent close price of the ticker multiplied by weighted outstanding shares. */
    @Json(name = "market_cap")
    val marketCap: kotlin.Double? = null,

    /* The phone number for the company behind this ticker. */
    @Json(name = "phone_number")
    val phoneNumber: kotlin.String? = null,

    /* The ISO code of the primary listing exchange for this asset. */
    @Json(name = "primary_exchange")
    val primaryExchange: kotlin.String? = null,

    /* Round lot size of this security. */
    @Json(name = "round_lot")
    val roundLot: kotlin.Double? = null,

    /* The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi) */
    @Json(name = "share_class_figi")
    val shareClassFigi: kotlin.String? = null,

    /* The recorded number of outstanding shares for this particular share class. */
    @Json(name = "share_class_shares_outstanding")
    val shareClassSharesOutstanding: kotlin.Double? = null,

    /* The standard industrial classification code for this ticker.  For a list of SIC Codes, see the SEC's <a rel=\"nofollow\" target=\"_blank\" href=\"https://www.sec.gov/info/edgar/siccodes.htm\">SIC Code List</a>. */
    @Json(name = "sic_code")
    val sicCode: kotlin.String? = null,

    /* A description of this ticker's SIC code. */
    @Json(name = "sic_description")
    val sicDescription: kotlin.String? = null,

    /* The root of a specified ticker. For example, the root of BRK.A is BRK. */
    @Json(name = "ticker_root")
    val tickerRoot: kotlin.String? = null,

    /* The suffix of a specified ticker. For example, the suffix of BRK.A is A. */
    @Json(name = "ticker_suffix")
    val tickerSuffix: kotlin.String? = null,

    /* The approximate number of employees for the company. */
    @Json(name = "total_employees")
    val totalEmployees: java.math.BigDecimal? = null,

    /* The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types). */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* The shares outstanding calculated assuming all shares of other share classes are converted to this share class. */
    @Json(name = "weighted_shares_outstanding")
    val weightedSharesOutstanding: kotlin.Double? = null

) {

    /**
     * The locale of the asset.
     *
     * Values: us,global
     */
    @JsonClass(generateAdapter = false)
    enum class Locale(val value: kotlin.String) {
        @Json(name = "us") us("us"),
        @Json(name = "global") global("global");
    }
    /**
     * The market type of the asset.
     *
     * Values: stocks,crypto,fx,otc,indices
     */
    @JsonClass(generateAdapter = false)
    enum class Market(val value: kotlin.String) {
        @Json(name = "stocks") stocks("stocks"),
        @Json(name = "crypto") crypto("crypto"),
        @Json(name = "fx") fx("fx"),
        @Json(name = "otc") otc("otc"),
        @Json(name = "indices") indices("indices");
    }

}

