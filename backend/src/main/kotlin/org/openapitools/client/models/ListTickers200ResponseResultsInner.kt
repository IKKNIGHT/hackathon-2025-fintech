/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param locale The locale of the asset.
 * @param market The market type of the asset.
 * @param name The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair.
 * @param ticker The exchange symbol that this item is traded under.
 * @param active Whether or not the asset is actively traded. False means the asset has been delisted.
 * @param cik The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key).
 * @param compositeFigi The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
 * @param currencyName The name of the currency that this asset is traded with.
 * @param delistedUtc The last date that the asset was traded.
 * @param lastUpdatedUtc The information is accurate up to this time.
 * @param primaryExchange The ISO code of the primary listing exchange for this asset.
 * @param shareClassFigi The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi)
 * @param type The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types).
 */


data class ListTickers200ResponseResultsInner (

    /* The locale of the asset. */
    @Json(name = "locale")
    val locale: ListTickers200ResponseResultsInner.Locale,

    /* The market type of the asset. */
    @Json(name = "market")
    val market: ListTickers200ResponseResultsInner.Market,

    /* The name of the asset. For stocks/equities this will be the companies registered name. For crypto/fx this will be the name of the currency or coin pair. */
    @Json(name = "name")
    val name: kotlin.String,

    /* The exchange symbol that this item is traded under. */
    @Json(name = "ticker")
    val ticker: kotlin.String,

    /* Whether or not the asset is actively traded. False means the asset has been delisted. */
    @Json(name = "active")
    val active: kotlin.Boolean? = null,

    /* The CIK number for this ticker. Find more information [here](https://en.wikipedia.org/wiki/Central_Index_Key). */
    @Json(name = "cik")
    val cik: kotlin.String? = null,

    /* The composite OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi) */
    @Json(name = "composite_figi")
    val compositeFigi: kotlin.String? = null,

    /* The name of the currency that this asset is traded with. */
    @Json(name = "currency_name")
    val currencyName: kotlin.String? = null,

    /* The last date that the asset was traded. */
    @Json(name = "delisted_utc")
    val delistedUtc: java.time.OffsetDateTime? = null,

    /* The information is accurate up to this time. */
    @Json(name = "last_updated_utc")
    val lastUpdatedUtc: java.time.OffsetDateTime? = null,

    /* The ISO code of the primary listing exchange for this asset. */
    @Json(name = "primary_exchange")
    val primaryExchange: kotlin.String? = null,

    /* The share Class OpenFIGI number for this ticker. Find more information [here](https://www.openfigi.com/about/figi) */
    @Json(name = "share_class_figi")
    val shareClassFigi: kotlin.String? = null,

    /* The type of the asset. Find the types that we support via our [Ticker Types API](https://polygon.io/docs/stocks/get_v3_reference_tickers_types). */
    @Json(name = "type")
    val type: kotlin.String? = null

) {

    /**
     * The locale of the asset.
     *
     * Values: us,global
     */
    @JsonClass(generateAdapter = false)
    enum class Locale(val value: kotlin.String) {
        @Json(name = "us") us("us"),
        @Json(name = "global") global("global");
    }
    /**
     * The market type of the asset.
     *
     * Values: stocks,crypto,fx,otc,indices
     */
    @JsonClass(generateAdapter = false)
    enum class Market(val value: kotlin.String) {
        @Json(name = "stocks") stocks("stocks"),
        @Json(name = "crypto") crypto("crypto"),
        @Json(name = "fx") fx("fx"),
        @Json(name = "otc") otc("otc"),
        @Json(name = "indices") indices("indices");
    }

}

