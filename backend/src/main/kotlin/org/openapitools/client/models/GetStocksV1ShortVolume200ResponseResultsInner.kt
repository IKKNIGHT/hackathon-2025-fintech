/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param date The date of trade activity reported in the format YYYY-MM-DD
 * @param adfShortVolume Short volume reported via the Alternative Display Facility (ADF), excluding exempt volume.
 * @param adfShortVolumeExempt Short volume reported via ADF that was marked as exempt.
 * @param exemptVolume Portion of short volume that was marked as exempt from regulation SHO.
 * @param nasdaqCarteretShortVolume Short volume reported from Nasdaq's Carteret facility, excluding exempt volume.
 * @param nasdaqCarteretShortVolumeExempt Short volume from Nasdaq Carteret that was marked as exempt.
 * @param nasdaqChicagoShortVolume Short volume reported from Nasdaq's Chicago facility, excluding exempt volume.
 * @param nasdaqChicagoShortVolumeExempt Short volume from Nasdaq Chicago that was marked as exempt.
 * @param nonExemptVolume Portion of short volume that was not exempt from regulation SHO (i.e., short_volume - exempt_volume).
 * @param nyseShortVolume Short volume reported from NYSE facilities, excluding exempt volume.
 * @param nyseShortVolumeExempt Short volume from NYSE facilities that was marked as exempt.
 * @param shortVolume Total number of shares sold short across all venues for the ticker on the given date.
 * @param shortVolumeRatio The percentage of total volume that was sold short. Calculated as (short_volume / total_volume) * 100.
 * @param ticker The primary ticker symbol for the stock.
 * @param totalVolume Total reported volume across all venues for the ticker on the given date.
 */


data class GetStocksV1ShortVolume200ResponseResultsInner (

    /* The date of trade activity reported in the format YYYY-MM-DD */
    @Json(name = "date")
    val date: kotlin.String,

    /* Short volume reported via the Alternative Display Facility (ADF), excluding exempt volume. */
    @Json(name = "adf_short_volume")
    val adfShortVolume: kotlin.Long? = null,

    /* Short volume reported via ADF that was marked as exempt. */
    @Json(name = "adf_short_volume_exempt")
    val adfShortVolumeExempt: kotlin.Long? = null,

    /* Portion of short volume that was marked as exempt from regulation SHO. */
    @Json(name = "exempt_volume")
    val exemptVolume: kotlin.Long? = null,

    /* Short volume reported from Nasdaq's Carteret facility, excluding exempt volume. */
    @Json(name = "nasdaq_carteret_short_volume")
    val nasdaqCarteretShortVolume: kotlin.Long? = null,

    /* Short volume from Nasdaq Carteret that was marked as exempt. */
    @Json(name = "nasdaq_carteret_short_volume_exempt")
    val nasdaqCarteretShortVolumeExempt: kotlin.Long? = null,

    /* Short volume reported from Nasdaq's Chicago facility, excluding exempt volume. */
    @Json(name = "nasdaq_chicago_short_volume")
    val nasdaqChicagoShortVolume: kotlin.Long? = null,

    /* Short volume from Nasdaq Chicago that was marked as exempt. */
    @Json(name = "nasdaq_chicago_short_volume_exempt")
    val nasdaqChicagoShortVolumeExempt: kotlin.Long? = null,

    /* Portion of short volume that was not exempt from regulation SHO (i.e., short_volume - exempt_volume). */
    @Json(name = "non_exempt_volume")
    val nonExemptVolume: kotlin.Long? = null,

    /* Short volume reported from NYSE facilities, excluding exempt volume. */
    @Json(name = "nyse_short_volume")
    val nyseShortVolume: kotlin.Long? = null,

    /* Short volume from NYSE facilities that was marked as exempt. */
    @Json(name = "nyse_short_volume_exempt")
    val nyseShortVolumeExempt: kotlin.Long? = null,

    /* Total number of shares sold short across all venues for the ticker on the given date. */
    @Json(name = "short_volume")
    val shortVolume: kotlin.Long? = null,

    /* The percentage of total volume that was sold short. Calculated as (short_volume / total_volume) * 100. */
    @Json(name = "short_volume_ratio")
    val shortVolumeRatio: kotlin.Float? = null,

    /* The primary ticker symbol for the stock. */
    @Json(name = "ticker")
    val ticker: kotlin.String? = null,

    /* Total reported volume across all venues for the ticker on the given date. */
    @Json(name = "total_volume")
    val totalVolume: kotlin.Long? = null

) {


}

