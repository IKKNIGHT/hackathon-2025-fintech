/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param c A list of condition codes. 
 * @param i The Trade ID which uniquely identifies a trade. These are unique per combination of ticker, exchange, and TRF. For example: A trade for AAPL executed on NYSE and a trade for AAPL executed on NASDAQ could potentially have the same Trade ID. 
 * @param p The price of the trade. This is the actual dollar value per whole share of this trade. A trade of 100 shares with a price of $2.00 would be worth a total dollar value of $200.00. 
 * @param s The size of a trade (also known as volume). 
 * @param t The Unix millisecond timestamp for the start of the aggregate window.
 * @param x The exchange that this crypto trade happened on.   See <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs. 
 */


data class CryptoTick (

    /* A list of condition codes.  */
    @Json(name = "c")
    val c: kotlin.collections.List<kotlin.Int>,

    /* The Trade ID which uniquely identifies a trade. These are unique per combination of ticker, exchange, and TRF. For example: A trade for AAPL executed on NYSE and a trade for AAPL executed on NASDAQ could potentially have the same Trade ID.  */
    @Json(name = "i")
    val i: kotlin.String,

    /* The price of the trade. This is the actual dollar value per whole share of this trade. A trade of 100 shares with a price of $2.00 would be worth a total dollar value of $200.00.  */
    @Json(name = "p")
    val p: kotlin.Double,

    /* The size of a trade (also known as volume).  */
    @Json(name = "s")
    val s: kotlin.Double,

    /* The Unix millisecond timestamp for the start of the aggregate window. */
    @Json(name = "t")
    val t: kotlin.Int,

    /* The exchange that this crypto trade happened on.   See <a href=\"https://polygon.io/docs/crypto/get_v3_reference_exchanges\">Exchanges</a> for a mapping of exchanges to IDs.  */
    @Json(name = "x")
    val x: kotlin.Int

) {


}

