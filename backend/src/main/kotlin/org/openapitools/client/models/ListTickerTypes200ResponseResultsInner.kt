/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Describes the type of financial instrument represented by a ticker.
 *
 * @param assetClass An identifier for a group of similar financial instruments.
 * @param code A code used by Polygon.io to refer to this ticker type.
 * @param description A short description of this ticker type.
 * @param locale An identifier for a geographical location.
 */


data class ListTickerTypes200ResponseResultsInner (

    /* An identifier for a group of similar financial instruments. */
    @Json(name = "asset_class")
    val assetClass: ListTickerTypes200ResponseResultsInner.AssetClass,

    /* A code used by Polygon.io to refer to this ticker type. */
    @Json(name = "code")
    val code: kotlin.String,

    /* A short description of this ticker type. */
    @Json(name = "description")
    val description: kotlin.String,

    /* An identifier for a geographical location. */
    @Json(name = "locale")
    val locale: ListTickerTypes200ResponseResultsInner.Locale

) {

    /**
     * An identifier for a group of similar financial instruments.
     *
     * Values: stocks,options,crypto,fx,indices
     */
    @JsonClass(generateAdapter = false)
    enum class AssetClass(val value: kotlin.String) {
        @Json(name = "stocks") stocks("stocks"),
        @Json(name = "options") options("options"),
        @Json(name = "crypto") crypto("crypto"),
        @Json(name = "fx") fx("fx"),
        @Json(name = "indices") indices("indices");
    }
    /**
     * An identifier for a geographical location.
     *
     * Values: us,global
     */
    @JsonClass(generateAdapter = false)
    enum class Locale(val value: kotlin.String) {
        @Json(name = "us") us("us"),
        @Json(name = "global") global("global");
    }

}

