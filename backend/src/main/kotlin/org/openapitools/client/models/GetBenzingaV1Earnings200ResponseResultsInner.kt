/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param actualEps The actual earnings per share (EPS) reported by the company for the given period.
 * @param actualRevenue The actual revenue reported by the company for the given fiscal period.
 * @param benzingaId The identifer used by Benzinga for this record.
 * @param companyName The name of the company releasing earnings.
 * @param currency The ISO 4217 currency code indicating the denomination in which the figures are reported.
 * @param date The calendar date (formatted as YYYY-MM-DD) when the earnings are scheduled or were reported.
 * @param dateStatus Indicates whether the date of the earnings report has been confirmed. Possible values include: projected, confirmed.
 * @param epsMethod The methodology of the EPS figure. Possible values are gaap (standardized financials under Generally Accepted Accounting Principles), ffo (Funds From Operations, a non-GAAP metric commonly used to assess the operating performance of REITs), and adj (adjusted, non-GAAP).
 * @param epsSurprise The difference between the actual and estimated EPS.
 * @param epsSurprisePercent The percentage difference between the actual and estimated EPS.
 * @param estimatedEps The analyst consensus estimate for earnings per share (EPS) for the given period.
 * @param estimatedRevenue The analyst consensus estimate for the company's revenue in the given period.
 * @param fiscalPeriod The fiscal period for which the earnings are reported. Examples include: Q1, Q2, H1, FY.
 * @param fiscalYear The fiscal year in which the earnings period falls.
 * @param importance A subjective indicator of the importance of the event, on a scale from 0 (lowest) to 5 (highest).
 * @param lastUpdated The timestamp (formatted as an ISO 8601 timestamp) when the record was last updated in the system.
 * @param notes Additional context, commentary, or clarifying notes related to the earnings event.
 * @param previousEps The company's reported earnings per share (EPS) for the previous comparable period.
 * @param previousRevenue The company's revenue for the previous comparable fiscal period.
 * @param revenueMethod The methodology of the revenue figure. Possible values are gaap (standardized financials under Generally Accepted Accounting Principles), adj (adjusted, non-GAAP figures that exclude certain items like one-time charges or divestitures), and rental (revenue specifically derived from rental operations, typically used by REITs, leasing companies, or businesses with a rental-based model).
 * @param revenueSurprise The difference between the actual and estimated revenue.
 * @param revenueSurprisePercent The percentage difference between the actual and estimated revenue.
 * @param ticker The stock symbol of the company reporting earnings.
 * @param time The time (formatted as 24-hour HH:MM:SS UTC) when the earnings are scheduled or were reported.
 */


data class GetBenzingaV1Earnings200ResponseResultsInner (

    /* The actual earnings per share (EPS) reported by the company for the given period. */
    @Json(name = "actual_eps")
    val actualEps: kotlin.Double? = null,

    /* The actual revenue reported by the company for the given fiscal period. */
    @Json(name = "actual_revenue")
    val actualRevenue: kotlin.Double? = null,

    /* The identifer used by Benzinga for this record. */
    @Json(name = "benzinga_id")
    val benzingaId: kotlin.String? = null,

    /* The name of the company releasing earnings. */
    @Json(name = "company_name")
    val companyName: kotlin.String? = null,

    /* The ISO 4217 currency code indicating the denomination in which the figures are reported. */
    @Json(name = "currency")
    val currency: kotlin.String? = null,

    /* The calendar date (formatted as YYYY-MM-DD) when the earnings are scheduled or were reported. */
    @Json(name = "date")
    val date: kotlin.String? = null,

    /* Indicates whether the date of the earnings report has been confirmed. Possible values include: projected, confirmed. */
    @Json(name = "date_status")
    val dateStatus: kotlin.String? = null,

    /* The methodology of the EPS figure. Possible values are gaap (standardized financials under Generally Accepted Accounting Principles), ffo (Funds From Operations, a non-GAAP metric commonly used to assess the operating performance of REITs), and adj (adjusted, non-GAAP). */
    @Json(name = "eps_method")
    val epsMethod: kotlin.String? = null,

    /* The difference between the actual and estimated EPS. */
    @Json(name = "eps_surprise")
    val epsSurprise: kotlin.Double? = null,

    /* The percentage difference between the actual and estimated EPS. */
    @Json(name = "eps_surprise_percent")
    val epsSurprisePercent: kotlin.Double? = null,

    /* The analyst consensus estimate for earnings per share (EPS) for the given period. */
    @Json(name = "estimated_eps")
    val estimatedEps: kotlin.Double? = null,

    /* The analyst consensus estimate for the company's revenue in the given period. */
    @Json(name = "estimated_revenue")
    val estimatedRevenue: kotlin.Double? = null,

    /* The fiscal period for which the earnings are reported. Examples include: Q1, Q2, H1, FY. */
    @Json(name = "fiscal_period")
    val fiscalPeriod: kotlin.String? = null,

    /* The fiscal year in which the earnings period falls. */
    @Json(name = "fiscal_year")
    val fiscalYear: kotlin.Long? = null,

    /* A subjective indicator of the importance of the event, on a scale from 0 (lowest) to 5 (highest). */
    @Json(name = "importance")
    val importance: kotlin.Long? = null,

    /* The timestamp (formatted as an ISO 8601 timestamp) when the record was last updated in the system. */
    @Json(name = "last_updated")
    val lastUpdated: kotlin.String? = null,

    /* Additional context, commentary, or clarifying notes related to the earnings event. */
    @Json(name = "notes")
    val notes: kotlin.String? = null,

    /* The company's reported earnings per share (EPS) for the previous comparable period. */
    @Json(name = "previous_eps")
    val previousEps: kotlin.Double? = null,

    /* The company's revenue for the previous comparable fiscal period. */
    @Json(name = "previous_revenue")
    val previousRevenue: kotlin.Double? = null,

    /* The methodology of the revenue figure. Possible values are gaap (standardized financials under Generally Accepted Accounting Principles), adj (adjusted, non-GAAP figures that exclude certain items like one-time charges or divestitures), and rental (revenue specifically derived from rental operations, typically used by REITs, leasing companies, or businesses with a rental-based model). */
    @Json(name = "revenue_method")
    val revenueMethod: kotlin.String? = null,

    /* The difference between the actual and estimated revenue. */
    @Json(name = "revenue_surprise")
    val revenueSurprise: kotlin.Double? = null,

    /* The percentage difference between the actual and estimated revenue. */
    @Json(name = "revenue_surprise_percent")
    val revenueSurprisePercent: kotlin.Double? = null,

    /* The stock symbol of the company reporting earnings. */
    @Json(name = "ticker")
    val ticker: kotlin.String? = null,

    /* The time (formatted as 24-hour HH:MM:SS UTC) when the earnings are scheduled or were reported. */
    @Json(name = "time")
    val time: kotlin.String? = null

) {


}

