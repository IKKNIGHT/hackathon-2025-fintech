/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param companyName Full name of the company.
 * @param date Scheduled date of the corporate event, formatted as YYYY-MM-DD.
 * @param isin Standard international identifier for the company's common stock.
 * @param name Name or title of the event.
 * @param status The current status of the event. Possible values include: approved, canceled, confirmed, historical, pending_approval, postponed, and unconfirmed.
 * @param ticker The company's stock symbol.
 * @param tmxCompanyId Unique numeric identifier for the company used by TMX.
 * @param tmxRecordId The unique alphanumeric identifier for the event record used by TMX.
 * @param tradingVenue MIC (Market Identifier Code) of the exchange where the company's stock is listed.
 * @param type The normalized type of corporate event. Possible values include: analyst_day, business_update, capital_markets_day, conference, dividend, earnings_announcement_date, earnings_conference_call, earnings_results_announcement, forum, interim_statement, other_interim_announcement, production_update, research_and_development_day, seminar, shareholder_meeting, sales_update, stock_split, summit, service_level_update, tradeshow, company_travel, and workshop.
 * @param url URL linking to the primary public source of the event announcement, if available.
 */


data class GetTmxV1CorporateEvents200ResponseResultsInner (

    /* Full name of the company. */
    @Json(name = "company_name")
    val companyName: kotlin.String? = null,

    /* Scheduled date of the corporate event, formatted as YYYY-MM-DD. */
    @Json(name = "date")
    val date: kotlin.String? = null,

    /* Standard international identifier for the company's common stock. */
    @Json(name = "isin")
    val isin: kotlin.String? = null,

    /* Name or title of the event. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* The current status of the event. Possible values include: approved, canceled, confirmed, historical, pending_approval, postponed, and unconfirmed. */
    @Json(name = "status")
    val status: kotlin.String? = null,

    /* The company's stock symbol. */
    @Json(name = "ticker")
    val ticker: kotlin.String? = null,

    /* Unique numeric identifier for the company used by TMX. */
    @Json(name = "tmx_company_id")
    val tmxCompanyId: kotlin.Long? = null,

    /* The unique alphanumeric identifier for the event record used by TMX. */
    @Json(name = "tmx_record_id")
    val tmxRecordId: kotlin.String? = null,

    /* MIC (Market Identifier Code) of the exchange where the company's stock is listed. */
    @Json(name = "trading_venue")
    val tradingVenue: kotlin.String? = null,

    /* The normalized type of corporate event. Possible values include: analyst_day, business_update, capital_markets_day, conference, dividend, earnings_announcement_date, earnings_conference_call, earnings_results_announcement, forum, interim_statement, other_interim_announcement, production_update, research_and_development_day, seminar, shareholder_meeting, sales_update, stock_split, summit, service_level_update, tradeshow, company_travel, and workshop. */
    @Json(name = "type")
    val type: kotlin.String? = null,

    /* URL linking to the primary public source of the event announcement, if available. */
    @Json(name = "url")
    val url: kotlin.String? = null

) {


}

